<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.doutown.member.dao.MemberMapper">

    <resultMap id="MemberResult" type="MemberDTO">
        <id property="memberNo" column="MEMBER_NO"/>
        <result property="memberId" column="MEMBER_ID"/>
        <result property="memberPass" column="MEMBER_PASS"/>
        <result property="memberName" column="MEMBER_NAME"/>
        <result property="memberGrade" column="MEMBER_GRADE"/>
        <result property="studentStatus" column="STUDENT_STATUS"/>
        <result property="registDate" column="REGIST_DATE"/>
        <association property="studentDTO" resultMap="StudentResult"/>
    </resultMap>

    <resultMap id="StudentResult" type="StudentDTO">
        <id property="studentNo" column="STUDENT_NO"/>
        <result property="studentName" column="STUDENT_NAME"/>
        <result property="hakNumber" column="HAK_NUMBER"/>
        <result property="memberNo" column="MEMBER_NO"/>
        <association property="departmentDTO" resultMap="DepartmentResult"/>
    </resultMap>

    <resultMap id="DepartmentResult" type="DepartmentDTO">
        <id property="departmentCode" column="DEPARTMENT_CODE"/>
        <result property="departmentName" column="DEPARTMENT_NAME"/>
    </resultMap>

    <select id="findByMember" parameterType="Map" resultType="boolean">
        SELECT COUNT(*) FROM member WHERE MEMBER_ID=#{memberId} AND MEMBER_PASS=#{memberPass}
    </select>

    <!-- 회원 목록 전체 조회 -->
    <select id="findMemberAll" resultType="MemberDTO" resultMap="MemberResult">
        SELECT * FROM MEMBER
    </select>

    <!-- 회원 한명 목록 조회 - 번호 -->
    <select id="findMemberByNo" parameterType="Long" resultType="MemberDTO" resultMap="MemberResult">
        SELECT * FROM MEMBER WHERE MEMBER_NO=#{memberNo}
    </select>

    <!-- 회원 한명 목록 조회 - 이름 -->
    <select id="findMemberByName" parameterType="String" resultType="MemberDTO">
        SELECT * FROM MEMBER WHERE MEMBER_NAME=#{memberName}
    </select>

    <!-- 인증된 회원에 대한 전체 목록 조회 -->
    <select id="findStudentAll" parameterType="MemberDTO" resultMap="MemberResult">
        SELECT
            m.MEMBER_NO,
            m.MEMBER_ID,
            m.MEMBER_PASS,
            m.MEMBER_NAME,
            m.MEMBER_GRADE,
            s.STUDENT_NO,
            s.HAK_NUMBER,
            d.DEPARTMENT_NAME
        FROM MEMBER m JOIN STUDENT s ON m.MEMBER_NO=s.MEMBER_NO
                      JOIN DEPARTMENT d ON d.DEPARTMENT_CODE = s.DEPARTMENT_CODE
        WHERE m.STUDENT_STATUS="Y"
    </select>


    <!-- 학생 번호로 찾기 학생 한명 조회 -->
    <select id="findStudentByNo" parameterType="Long" resultType="MemberDTO" resultMap="MemberResult">
        SELECT
            m.MEMBER_NO,
            m.MEMBER_ID,
            m.MEMBER_PASS,
            m.MEMBER_NAME,
            m.MEMBER_GRADE,
            s.STUDENT_NO,
            s.HAK_NUMBER,
            d.DEPARTMENT_NAME
        FROM MEMBER m JOIN STUDENT s ON m.MEMBER_NO=s.MEMBER_NO
                      JOIN DEPARTMENT d ON d.DEPARTMENT_CODE = s.DEPARTMENT_CODE
        WHERE m.STUDENT_STATUS="Y" AND s.STUDENT_NO=#{studentNo}
    </select>

    <!-- 회원가입 -->
    <insert id="saveMember" parameterType="MemberDTO" useGeneratedKeys="true" keyProperty="memberNo">
        INSERT INTO member(MEMBER_NAME,MEMBER_ID,MEMBER_PASS, MEMBER_GRADE,STUDENT_STATUS,REGIST_DATE)
        VALUES(#{memberName},#{memberId},#{memberPass},default,default,now());
    </insert>

    <!-- 회원탈퇴 -->
    <delete id="deleteMember" parameterType="String">
        DELETE FROM MEMBER WHERE MEMBER_NAME=#{memberName}
    </delete>

    <!-- 인증시 상태 업데이트 N -> Y -->
    <update id="updateMember" parameterType="Long">
        UPDATE MEMBER SET STUDENT_STATUS="Y" WHERE MEMBER_NO=#{memberNo}
    </update>

    <!-- 인증 후 학생 테이블에 데이터 저장 -->
    <!-- 인증시 전달 받아야하는 데이터 memberNo,memberName -->
    <insert id="saveStudent" parameterType="StudentDTO" useGeneratedKeys="true" keyProperty="studentNo">
        INSERT INTO
            STUDENT(STUDENT_NAME,HAK_NUMBER,MEMBER_NO,DEPARTMENT_CODE)
        VALUES(#{sutdentName},#{hakNumber},#{memberNo},#{departmentCode})
    </insert>

</mapper>
